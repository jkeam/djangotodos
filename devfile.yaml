schemaVersion: 2.2.0
metadata:
  name: python-django
components:
  - name: tools
    container:
      image: quay.io/devfile/universal-developer-image:ubi8-latest
      endpoints:
        - exposure: public
          name: django
          targetPort: 8000
          protocol: https
      volumeMounts:
        - name: venv
          path: /home/user/.venv
      memoryLimit: 512Mi
      cpuLimit: 500m
      memoryRequest: 256Mi
      cpuRequest: 100m
      mountSources: true
  - name: adminer
    container:
      image: docker.io/adminer:latest
      memoryLimit: 1Gi
      cpuLimit: 500m
      env:
        - name: ADMINER_DEFAULT_SERVER
          value: localhost
        - name: ADMINER_DESIGN
          value: nette
      endpoints:
        - name: adminerport
          exposure: public
          targetPort: 8080
          protocol: https
  - name: db
    container:
      image: registry.redhat.io/rhel9/postgresql-15:latest
      memoryLimit: 512Mi
      cpuLimit: 500m
      env:
        - name: POSTGRESQL_USER
          value: todouser
        - name: POSTGRESQL_PASSWORD
          value: todopassword
        - name: POSTGRESQL_ADMIN_PASSWORD
          value: adminpassword
        - name: POSTGRESQL_DATABASE
          value: todos
      endpoints:
        - name: dbport
          exposure: none
          targetPort: 5432

  - name: venv
    volume:
      size: 1G

commands:
  - id: setup
    exec:
      label: "Setup project"
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: "./setup.sh"
      group:
        kind: build

  - id: install-dependencies
    exec:
      label: "Install dependencies"
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: "python3 -m venv .venv && . .venv/bin/activate && pip3 install -r requirements.txt && pip3 install ptvsd"
      group:
        kind: build

  - id: migrate
    exec:
      label: "Migrate"
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: ". .venv/bin/activate && python3 manage.py migrate"
      group:
        kind: build

  - id: create-user
    exec:
      label: "Create user"
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: ". .venv/bin/activate && DJANGO_SUPERUSER_PASSWORD=password1 python3 manage.py createsuperuser --username admin --email admin@example.com --noinput"
      group:
        kind: build

  - id: test
    exec:
      label: "Test"
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: ". .venv/bin/activate && python3 manage.py test"
      group:
        kind: test

  - id: run
    exec:
      label: "Run the server"
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: ". .venv/bin/activate && export DEBUG_MODE=False && python3 manage.py runserver 0.0.0.0:8000"
      group:
        kind: run

  - id: debug
    exec:
      label: "Run the server in debug mode"
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: ". .venv/bin/activate && export DEBUG_MODE=True && python3 manage.py runserver 0.0.0.0:8000 --noreload --nothreading"
      group:
        kind: debug
